import asyncio
import logging
import time
import aiohttp
import re
from config import VERIFICATION_BOT_TOKEN, VERIFICATION_BOT_ADMIN_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def send_telegram_message(chat_id, text):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram

    Args:
        chat_id (int): ID —á–∞—Ç–∞
        text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        bool: True, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
    """
    url = f"https://api.telegram.org/bot{VERIFICATION_BOT_TOKEN}/sendMessage"
    data = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }

    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(url, data=data) as response:
                if response.status == 200:
                    logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
                    return True
                else:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {response.status}")
                    return False
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {str(e)}")
        return False

def get_code_from_email_via_telegram_sync(email, email_password, timeout=300):
    """
    –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –≤ Telegram

    Args:
        email (str): –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã
        email_password (str): –ü–∞—Ä–æ–ª—å –æ—Ç –ø–æ—á—Ç—ã
        timeout (int): –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

    Returns:
        str: –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ None, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å
    """
    print(f"[DEBUG] –ó–∞–ø—Ä–æ—Å –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è {email}")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        if not VERIFICATION_BOT_TOKEN or not VERIFICATION_BOT_ADMIN_ID:
            print("[DEBUG] –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: VERIFICATION_BOT_TOKEN –∏–ª–∏ VERIFICATION_BOT_ADMIN_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
            print("[DEBUG] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–¥ –≤ Telegram
            loop = asyncio.new_event_loop()
            asyncio.set_event_loop(loop)
            try:
                message = f"üìß <b>–ó–∞–ø—Ä–æ—Å –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</b>\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É <code>{email}</code> –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç Instagram –≤ –∫–æ–Ω—Å–æ–ª—å."
                loop.run_until_complete(send_telegram_message(VERIFICATION_BOT_ADMIN_ID, message))
            finally:
                loop.close()

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–¥ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å
        print(f"\n{'='*50}")
        print(f"–¢–†–ï–ë–£–ï–¢–°–Ø –ö–û–î –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –î–õ–Ø {email}")
        print(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç Instagram:")
        print(f"{'='*50}\n")

        code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ").strip()

        print(f"\n{'='*50}")
        print(f"–ü–æ–ª—É—á–µ–Ω –∫–æ–¥: {code}")
        print(f"{'='*50}\n")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ Telegram, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        if VERIFICATION_BOT_TOKEN and VERIFICATION_BOT_ADMIN_ID:
            loop = asyncio.new_event_loop()
            asyncio.set_event_loop(loop)
            try:
                confirm_message = f"‚úÖ <b>–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω</b>\n\n–ö–æ–¥ <code>{code}</code> –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç."
                loop.run_until_complete(send_telegram_message(VERIFICATION_BOT_ADMIN_ID, confirm_message))
            finally:
                loop.close()

        return code
    except Exception as e:
        print(f"[DEBUG] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–¥–∞ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å: {str(e)}")
        return None

# –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è
if __name__ == "__main__":
    email = "test@example.com"
    email_password = "password"

    print(f"–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è {email}...")
    code = get_code_from_email_via_telegram_sync(email, email_password)

    if code:
        print(f"–ü–æ–ª—É—á–µ–Ω –∫–æ–¥: {code}")
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥")